openapi: 3.0.0
info:
  title: 'Organizations Service API'
  version: 1.0.0
servers:
  - { url: 'https://release-011-2327.c4.syndev.ru/api/v1', description: 'Organizations service' }
paths:
  /regions: { get: { tags: [Region], summary: 'Get Region collection', parameters: [{ $ref: '#/components/parameters/RegionIncludeParameter' }, { $ref: '#/components/parameters/RegionSortParameter' }, { $ref: '#/components/parameters/RegionFilterNameParameter' }, { $ref: '#/components/parameters/RegionFilterIdParameter' }, { $ref: '#/components/parameters/RegionFilterFederalDistrictIdParameter' }], responses: { 200: { $ref: '#/components/responses/RegionIndexResponse' }, 400: { $ref: '#/components/responses/BadRequest' }, 406: { $ref: '#/components/responses/UnprocessableContent' }, 500: { $ref: '#/components/responses/InternalServerError' } } } }
  /cities: { get: { tags: [City], summary: 'Get City collection', parameters: [{ $ref: '#/components/parameters/CityFilterNameParameter' }, { $ref: '#/components/parameters/CityFilterIdParameter' }, { $ref: '#/components/parameters/CityRegionIdParameter' }], responses: { 200: { $ref: '#/components/responses/CityIndexResponse' }, 406: { $ref: '#/components/responses/NotAcceptable' }, 500: { $ref: '#/components/responses/InternalServerError' } } } }
components:
  parameters: { RegionIncludeParameter: { in: query, name: include, schema: { type: string }, example: cities, description: 'Inclusion of related resources' }, RegionSortParameter: { in: query, name: sort, schema: { type: string, enum: [id, '-id', name, '-name', created_at, '-created_at'] }, example: id, description: 'Sorting of resource collections' }, RegionFilterParameter: { in: query, name: filter, schema: { type: string }, example: [name], description: 'Filtering of resource collections' }, RegionFilterIdParameter: { in: query, name: 'filter[id]', schema: { type: string }, description: 'ID of Region resource' }, RegionFilterFederalDistrictIdParameter: { in: query, name: 'filter[federalDistrictId]', schema: { type: string }, description: 'ID of related Federal District resource' }, RegionFilterNameParameter: { in: query, name: 'filter[name]', schema: { type: string }, description: 'field name of Region resource' } }
  requestBodies: { RegionStoreRequestBody: { content: { application/vnd.api+json: { schema: { type: object, properties: { data: { type: object, properties: { type: { $ref: '#/components/schemas/RegionType' }, attributes: { $ref: '#/components/schemas/RegionAttributes' }, relationships: { $ref: '#/components/schemas/RegionRelationshipsData' } } } } } } } } }
  responses: { RegionIndexResponse: { description: OK, headers: { Content-Type: { schema: { type: string }, description: application/vnd.api+json } }, content: { application/vnd.api+json: { schema: { type: object, properties: { data: { type: array, items: { type: object, properties: { id: { $ref: '#/components/schemas/RegionId' }, type: { $ref: '#/components/schemas/RegionType' }, attributes: { $ref: '#/components/schemas/RegionAttributes' }, relationships: { $ref: '#/components/schemas/RegionRelationships' } } } } } } } } }, InternalServerError: { description: 'Internal Server Error', headers: { Content-Type: { schema: { type: string }, description: application/vnd.api+json } }, content: { application/vnd.api+json: { schema: { type: object, properties: { errors: { type: array, items: { type: object, properties: { status: { type: string, example: 500 }, detail: { type: string, example: 'The backend responded with an error.' } } } } } } } } }, NotAcceptable: { description: 'Not Acceptable', headers: { Content-Type: { schema: { type: string }, description: application/vnd.api+json } }, content: { application/vnd.api+json: { schema: { type: object } } } }, NotFound: { description: 'Not Found', headers: { Content-Type: { schema: { type: string }, description: application/vnd.api+json } }, content: { application/vnd.api+json: { schema: { type: object, properties: { errors: { type: array, items: { type: object, properties: { status: { type: string, example: 404 }, detail: { type: string, example: 'The resource with ID 1 was not found.' } } } } } } } } }, UnprocessableContent: { description: 'Unprocessable Content', headers: { Content-Type: { schema: { type: string }, description: application/vnd.api+json } }, content: { application/vnd.api+json: { schema: { type: object, properties: { success: { type: string, example: false }, errors: { type: array, items: { type: object, properties: { title: { type: string, example: 'Validation Error' }, detail: { type: string, example: 'The selected data.type is invalid.' }, source: { type: object, properties: { pointer: { type: string, example: /data/type } } } } } } } } } } }, ImageUpdateException: { description: 'Unprocessable Content', headers: { Content-Type: { schema: { type: string }, description: application/vnd.api+json } }, content: { application/vnd.api+json: { schema: { type: object, properties: { errors: { type: array, items: { type: object, properties: { status: { type: string, example: 422 }, detail: { type: string, example: 'The has already been taken.' }, source: { type: object, properties: { pointer: { type: string, example: /data/attributes/path } } } } } } } } } } }, BadRequest: { description: 'Server cannot or will not process the request due to a client error', headers: { Content-Type: { schema: { type: string }, description: application/vnd.api+json } }, content: { application/vnd.api+json: { schema: { type: object, properties: { errors: { type: array, items: { type: object, properties: { title: { type: string, example: 'Invalid Include Query' }, detail: { type: string, example: 'Requested include(s) `organization` are not allowed. Allowed include(s) are `organizations, organizationsCount, region, regionCount`.' } } } } } } } } }, UnsupportedMediaType: { description: 'Unsupported Media Type', headers: { Content-Type: { schema: { type: string }, description: application/vnd.api+json } }, content: { application/vnd.api+json: { schema: { type: object } } } }, NoContent: { description: 'No Content' } }
  schemas: { RegionId: { type: integer, example: 5, description: ID }, RegionType: { type: string, example: regions, description: 'Type of resource' }, RegionAttributes: { type: object, properties: { federal_district_id: { type: integer, example: 10, description: 'ID of related Federal District resource' }, name: { type: string, example: Карелия, description: "Region's name" }, description: { type: text, example: 'Описание региона', description: 'A few words about the region' }, slug: { type: string, example: karelia, description: "Slug of region's name" }, active: { type: boolean, example: 1, description: 'Activated or not' }, created_at: { type: string, example: '2021-10-08 09:17:36', description: 'Created at ... (Autofill)' }, updated_at: { type: string, example: '2022-04-06 07:19:42', description: 'Updated at ... (Autofill)' } } }, RegionRelationships: { type: object, properties: { cities: { type: object, properties: { data: { $ref: '#/components/schemas/CityIdentifierData' } } } } }, CityId: { type: integer, example: 10, description: ID }, CityType: { type: string, example: cities, description: 'Type of resource' }, CityAttributes: { type: object, properties: { region_id: { type: integer, example: 10, description: 'ID of related Region resource' }, name: { type: string, example: Петрозаводск, description: "City's name" }, description: { type: text, example: 'Описание города', description: 'A few words about the city' }, slug: { type: string, example: petrozavodsk, description: "Slug of city's name" }, active: { type: boolean, example: 1, description: 'Activated or not' }, created_at: { type: string, example: '2021-10-08 09:17:36', description: 'Created at ... (Autofill)' }, updated_at: { type: string, example: '2022-04-06 07:19:42', description: 'Updated at ... (Autofill)' } } }, CityData: { type: object, properties: { id: { type: integer, example: 1, description: ID }, type: { type: string, example: cities, description: 'Type of resource' } } }, CityIdentifierData: { type: array, items: { $ref: '#/components/schemas/CityData' } }, CitiesRegionLinks: { type: object, properties: { self: { type: string, example: 'https://release-011-2327.c4.syndev.ru/api/v1/cities/1/relationships/region', description: 'Relationships link.' }, related: { type: string, example: 'https://release-011-2327.c4.syndev.ru/api/v1/cities/1/region', description: 'Related resource link.' } } }, CityRelationshipsLinks: { type: object, properties: { products: { type: object, properties: { links: { $ref: '#/components/schemas/CitiesRegionLinks' } } } } }, CityRelationships: { type: object, properties: { products: { type: object, properties: { data: { $ref: '#/components/schemas/ProductListData' }, links: { $ref: '#/components/schemas/FormatProductsLinks' } } } } }, FormatRelationshipsData: { type: object, properties: { products: { type: object, properties: { data: { $ref: '#/components/schemas/ProductListData' } } } } } }
